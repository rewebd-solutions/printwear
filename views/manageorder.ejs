<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/manageorder.css">
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css">
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
    <title>Manage orders - Printwear</title>
</head>

<body>
    <div class="banner">
        <%- include('partials/side-logo.ejs') %>
            <%- include('partials/top.ejs') %>
    </div>
    <div class="manageorder">
        <div class="mngord-head">
            <h2>Manage Order</h2>
            <button class="filter-button filter-button-active" onclick="changeWidget(event, 'confirmed')">Confirmed</button>
            <button class="filter-button" onclick="changeWidget(event,'refund')">Refund</button>         
        </div>
        <div class="order-table">
            <div id="printwear-order">
                <div class="search-options">
                    <label for="search-orders">Search</label>
                    <input id="search-orders" type="search" placeholder="Order ID, Tracking number, Customer Name, Shipment ID" />
                </div>
                <table>
                    <thead>
                        <th>S. No.</th>
                        <th>Printwear Order ID</th>
                        <th>Your Order ID</th>
                        <th>Name / Qnty / Price</th>
                        <th>Shipping Address</th>
                        <th>Amount paid</th>
                        <th>Delivery Charges</th>
                        <th>Delivery Status</th>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div id="refund-order">
                Refunds
            </div>
        </div>

    </div>
    
    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script>
        AOS.init();
        var notyf = new Notyf();
        var orderHistoryData = [];
        var designData = {};

        const orderHistoryTable = document.querySelector("#printwear-order > table tbody");
        const printwearOrderContainer = document.querySelector("#printwear-order");
        const refundOrderContainer = document.querySelector("#refund-order");
        const searchOrderBox = document.querySelector("#search-orders");

        searchOrderBox.oninput = (e) => {
            let searchKey = e.target.value.toLowerCase().trim();
            if (searchKey == '') return populateOrderHistoryTable();
            const orderHistoryFromSearch = orderHistoryData.filter(orderHistory => (
                    orderHistory.customerOrderId.includes(searchKey)
                    || orderHistory.CashfreeOrderId.includes(searchKey) 
                    || orderHistory.printwearOrderId.includes(searchKey)
                    || orderHistory.shipRocketOrderId.includes(searchKey)
                    || orderHistory.shipmentId.includes(searchKey)
                    || Object.values(orderHistory.billingAddress).join(' ').includes(searchKey) 
                    || Object.values(orderHistory.shippingAddress).join(' ').includes(searchKey)
            ));
            if (orderHistoryFromSearch.length < 1) return orderHistoryTable.innerHTML = 'Search not found';
            populateOrderHistoryTable(orderHistoryFromSearch)
        }

        const changeWidget = (e, widget) => {
            const filterByGenderButtons = document.querySelectorAll(".filter-button");
            filterByGenderButtons.forEach(filterBtn => filterBtn.classList.remove("filter-button-active"));

            e.target.classList.add("filter-button-active");

            switch (widget) {
                case 'refund':
                    printwearOrderContainer.style.display = "none";
                    refundOrderContainer.style.display = "flex";
                    break;
                case 'confirmed':
                    printwearOrderContainer.style.display = "flex";
                    refundOrderContainer.style.display = "none";
                    break;
                default: 
                    break;
            }
        }

        const populateOrderHistoryTable = (data = orderHistoryData) => {
            if (data.length < 1) {
                orderHistoryTable.innerHTML = `No orders yet!`;
                return notyf.error("No order history");
            }
            orderHistoryTable.innerHTML = data.map((orderHistory, i) => {
                return `
                    <tr>
                        <td>${i+1}</td>
                        <td>${orderHistory.printwearOrderId}</td>
                        <td>${orderHistory.customerOrderId}</td>
                        <td>
                            ${orderHistory.items.map(item => {
                                let currentDesign = designData.designs.find(design => design._id == item.designId);
                                if (!currentDesign) return '';
                                return `
                                   <p>${currentDesign.designName} / ${item.quantity} / ${currentDesign.price}</p>
                                `
                            }).join('\n')}
                        </td>
                        <td>${orderHistory.shippingAddress.firstName} ${orderHistory.shippingAddress.lastName}, ${orderHistory.shippingAddress.streetLandmark}, ${orderHistory.shippingAddress.city}, ${orderHistory.shippingAddress.state}</td>
                        <td>₹ ${orderHistory.amountPaid}</td>
                        <td>₹ ${orderHistory.deliveryCharges}</td>
                        <td>${orderHistory.deliveryStatus}</td>
                    </tr>                    
                `;
            }).join('\n')
        }

        const fetchOrderHistory = async () => {
            try {
                const orderHistoryRequest = await fetch("/getorderhistory");
                const orderHistoryResponse = await orderHistoryRequest.json();
                console.log(orderHistoryResponse)
                if (!orderHistoryRequest.ok) {
                    console.log(orderHistoryResponse.message || "Unknown error");
                    return notyf.error(orderHistoryResponse.message || "Unknown error");
                }
                orderHistoryData = orderHistoryResponse;
                populateOrderHistoryTable();
            } catch (error) {
                console.log(error);
                notyf.error("Something went wrong!");
            }
        }
    
        const fetchDesignsData = async () => {
            try {
                const designsFetchRequest = await fetch("/getdesigns");
                const designsFetchResponse = await designsFetchRequest.json();
                console.log(designsFetchResponse);
                if (!designsFetchRequest.ok) {
                    console.log(designsFetchResponse.message || "Unknown error");
                    return notyf.error(designsFetchResponse.message || "Unknown error");
                }
                designData = designsFetchResponse;
                fetchOrderHistory();
            } catch (error) {
                console.log(error);
                notyf.error("Something went wrong!");
            }
        }

        fetchDesignsData();
    
    </script>
</body>

</html>