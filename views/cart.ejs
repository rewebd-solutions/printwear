<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
  <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
  <script src="https://sdk.cashfree.com/js/v3/cashfree.js"></script>
  <link rel="stylesheet" href="/css/mycart.css">
  <title>My Cart - Printwear</title>
</head>

<body>
  <div class="banner">
    <%- include('partials/side-logo.ejs') %>
      <%- include('partials/top.ejs') %>
  </div>
  <div class="progressbar">
    <h2>Your Cart</h2>

  </div>
  <div class="cart">
    <!-- <h4 class="cart-title">No items in cart currently :)</h4> -->
    <div class="cart-items-wrapper">
      <span class="loader"></span>

    </div>
    <!-- Button trigger modal -->
    <div class="pageend">
      <h2>Total:
      </h2>
      <br>

      <div class="billing-address-form">
        <h3>Billing Address:</h3>
        <div class="form-group">
            <div>
              <label for="firstName">First name:</label>
              <input type="text" id="firstName" name="firstName" required>
            </div>

            <div>
              <label for="lastName">Last name:</label>
              <input type="text" id="lastName" name="lastName" required>
            </div>
        </div>

        <div class="form-group">
            <div>
              <label for="mobile">Mobile:</label>
              <input type="text" id="mobile" name="mobile" required>
            </div>

            <div>
              <label for="email">Email:</label>
              <input type="text" id="email" name="email" required>
            </div>
        </div>

        <div class="form-group full-width">
            <label for="streetLandmark">Street, Landmark:</label>
            <input type="text" id="streetLandmark" name="streetLandmark" required>
        </div>

        <div class="form-group">
            <div>
              <label for="city">City:</label>
              <input type="text" id="city" name="city" required>
            </div>

            <div>
              <label for="pincode">Pincode:</label>
              <input type="text" id="pincode" name="pincode" required>
            </div>
        </div>

        <div class="form-group full-width">
            <label for="state">State:</label>
            <select id="state" name="state" required>
              <option value="Andhra Pradesh">Andhra Pradesh</option>
              <option value="Arunachal Pradesh">Arunachal Pradesh</option>
              <option value="Assam">Assam</option>
              <option value="Bihar">Bihar</option>
              <option value="Chhattisgarh">Chhattisgarh</option>
              <option value="Goa">Goa</option>
              <option value="Gujarat">Gujarat</option>
              <option value="Haryana">Haryana</option>
              <option value="Himachal Pradesh">Himachal Pradesh</option>
              <option value="Jammu and Kashmir">Jammu and Kashmir</option>
              <option value="Jharkhand">Jharkhand</option>
              <option value="Karnataka">Karnataka</option>
              <option value="Kerala">Kerala</option>
              <option value="Madhya Pradesh">Madhya Pradesh</option>
              <option value="Maharashtra">Maharashtra</option>
              <option value="Manipur">Manipur</option>
              <option value="Meghalaya">Meghalaya</option>
              <option value="Mizoram">Mizoram</option>
              <option value="Nagaland">Nagaland</option>
              <option value="Odisha">Odisha</option>
              <option value="Punjab">Punjab</option>
              <option value="Rajasthan">Rajasthan</option>
              <option value="Sikkim">Sikkim</option>
              <option value="Tamil Nadu">Tamil Nadu</option>
              <option value="Telangana">Telangana</option>
              <option value="Tripura">Tripura</option>
              <option value="Uttarakhand">Uttarakhand</option>
              <option value="Uttar Pradesh">Uttar Pradesh</option>
              <option value="West Bengal">West Bengal</option>
              <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
              <option value="Chandigarh">Chandigarh</option>
              <option value="Dadra and Nagar Haveli">Dadra and Nagar Haveli</option>
              <option value="Daman and Diu">Daman and Diu</option>
              <option value="Delhi">Delhi</option>
              <option value="Lakshadweep">Lakshadweep</option>
              <option value="Puducherry">Puducherry</option>
            </select>
        </div>

        <div class="form-group full-width">
            <label for="country">Country:</label>
            <input type="text" id="country" name="country" value="India" disabled>
        </div>
      </div>

      <button type="button" id="btn-chkout">
        Proceed to checkout
      </button>
    </div>
    <!-- Modal -->
    <!-- <a href="https://payments-test.cashfree.com/links/G5e7kl6gi5bg"> Yes</a></button> -->
  </div>

  <script>
    var notyf = new Notyf();

    const cashfree = Cashfree({
      mode: "sandbox" //or production
    });

    const cartItemsContainer = document.querySelector(".cart-items-wrapper");

    const checkoutBtn = document.querySelector("#btn-chkout");

    checkoutBtn.addEventListener("click", async (e) => {
      if (fetchCartReponse.totalAmount <= 0) return notyf.error({
        message: "Total cannot be zero!",
        dismissible: true
      });
      const orderData = {
        cartId: fetchCartReponse._id,
        totalAmount: fetchCartReponse.totalAmount,
        items: [],
      }
      // get all the items and put it in an array with SKU, cartItemId
      const formsData = document.forms;
      for(const eachItem of formsData){
        let itemId = eachItem.name.split("_")[1];
        if (!eachItem.reportValidity()) return;

        orderData.items.push({
          cartItemId: itemId,
          quantity: fetchCartReponse.items.find(item => item._id === itemId).quantity,
          price: fetchCartReponse.items.find(item => item._id === itemId).price,
          sku: document.querySelector(`#sku_${itemId}`).textContent.split(" ")[1],
          shippingAddress: {
            firstName: eachItem[`firstName_${itemId}`].value,
            lastName: eachItem[`lastName_${itemId}`].value,
            mobile: eachItem[`mobile_${itemId}`].value,
            email: eachItem[`email_${itemId}`].value,
            streetLandmark: eachItem[`streetLandmark_${itemId}`].value,
            city: eachItem[`city_${itemId}`].value,
            pincode: eachItem[`pincode_${itemId}`].value,
            state: eachItem[`state_${itemId}`].value,
            country: eachItem[`country_${itemId}`].value
          }
        })
      }

      const deliveryAddressForm = document.querySelectorAll(".billing-address-form input");
      if (!Array.from(document.querySelectorAll(".billing-address-form input")).every(item => item.reportValidity())) return;

      orderData.billingAddress = {
        firstName: deliveryAddressForm[0].value,
        lastName: deliveryAddressForm[1].value,
        mobile: deliveryAddressForm[2].value,
        email: deliveryAddressForm[3].value,
        streetLandmark: deliveryAddressForm[4].value,
        city: deliveryAddressForm[5].value,
        pincode: deliveryAddressForm[6].value,
        state: document.querySelector(".billing-address-form select").value,
        country: deliveryAddressForm[7].value
      }

      console.log(orderData);
      // delivery address for now, each and every order only
      try {
        const createOrderRequest = await fetch("/createorder", {
          headers: {
            "Content-Type": "application/json"
          },
          method: "POST",
          body: JSON.stringify(orderData)
        });
        const createOrderResponse = await createOrderRequest.json();
        let checkoutOptions = {
          paymentSessionId: createOrderResponse.payment_session_id,  
        }
        cashfree.checkout(checkoutOptions).then(function(result){
          if(result.error){
              throw new Error(result.error.message)
          }
          if(result.redirect){
              console.log("Redirection")
          }
      });        
        console.log(createOrderResponse);
        // location.href = createOrderResponse.link_url;
      } catch (error) {
        console.log(error);
        notyf.error({
          message: "Something went wrong! " + error,
          dismissible: true
        })
      }
    })

    const deleteCartItem = async (itemId) => {
      try {
        const deleteItemRequest = await fetch("/deletecartitem", {
          method: "POST",
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            cartId: fetchCartReponse._id,
            itemId
          })
        });
        if (deleteItemRequest.ok) {
          notyf.success({
            message: "Cart item deleted successfully",
            duration: 2000,
            dismissible: true
          })
          fetchCartData();
        }
      } catch (error) {
        console.log(error);
        notyf.error({
          message: "Couldn't remove from cart due to error",
          duration: 2000,
          dismissible: true
        })
      }
    }

    const changeQty = (inputElem) => { 
      console.log(inputElem.id.split("_")[2], inputElem.value);
      let cartItemId = inputElem.id.split("_")[1];
      let cartItemSize = inputElem.id.split("_")[2];
      let cartItemQty = parseInt(inputElem.value);
      let cartItemToChange = fetchCartReponse.items.find(cartItem => cartItem._id === cartItemId);
      cartItemToChange.quantity[cartItemSize] = cartItemQty;
      let indexToChange = fetchCartReponse.items.findIndex(cartItem => cartItem._id === cartItemId);
      fetchCartReponse.items[indexToChange] = cartItemToChange;
      let currentCartItem = fetchCartReponse.items[indexToChange];
      // console.log(cartItemId,cartItemSize, cartItemQty, cartItemToChange, indexToChange, currentCartItem )
      let changedPrice = Object.entries(currentCartItem.quantity).map(qty => currentCartItem.product.price[qty[0].toLowerCase()] * qty[1]).reduce((curr, next) => curr + next, 0);
      fetchCartReponse.items[indexToChange].price = changedPrice;
      document.querySelector("#price_"+cartItemId).innerHTML = `Price: ₹${changedPrice}`;
      fetchCartReponse.totalAmount = fetchCartReponse.items.map(item => item.price).reduce((item, pr) => item+pr, 0);
      document.querySelector(".pageend h2").textContent = 'Total: ₹' + fetchCartReponse.totalAmount;
    }

    const createCartItems = () => {
      const cartItemsDOMString = fetchCartReponse.items.map(cartItem => {
        return `
        <div class="cart-item">
          <div class="product-title-delete">
            <h5 class="product-design-name">
              ${cartItem.designData.designName}
            </h5>
            <button class="delete-item" data-itemid="${cartItem._id}"><i class="fa fa-trash"></i>&nbsp;Remove from cart</button>
          </div>
          <div style="display: flex; ">
            <div class="product-image">
              <img
                src="${cartItem.designData.designImage.front}"
                data-back="${cartItem.designData.designImage.back}"
                alt="${cartItem.designData.designName}">
            </div>
            <div class="product-details">
              <h5 class="product-detail">Product: ${cartItem.product.name}</h5>
              <h5 class="product-detail">Category: ${cartItem.product.category}</h5>
              <table class="table">
                <tr>
                  ${Object.entries(cartItem.quantity).map(sizeQty => {
                    return `
                      <td><b>${sizeQty[0]}</b></td>
                    `;
                  }).join("\n")}
                </tr>
                <tr>
                  ${Object.entries(cartItem.quantity).map((sizeQty, i) => {
                    return `
                      <td>
                        <input id="inp_${cartItem._id}_${sizeQty[0]}" type="number" value="${sizeQty[1]}" onchange="changeQty(this)" min="0" max="${cartItem.color.sizes.find(s => s.size.toLowerCase() === sizeQty[0].toLowerCase()).stock}" />
                      </td>
                    `;
                  }).join("\n")}
                </tr>
              </table>
              <h5 class="product-detail" id="sku_${cartItem._id}">SKU: ${cartItem.sku}</h5>
              <h5 class="product-details" id="price_${cartItem._id}">Price: ₹${cartItem.price}</h5>
              <form name="̥delivery_${cartItem._id}">
                <div class="form-group">
                  <div>
                    <label for="firstName_${cartItem._id}">First name:</label>
                    <input type="text" id="firstName_${cartItem._id}" name="firstName_${cartItem._id}" required>
                  </div>
  
                  <div>
                    <label for="lastName_${cartItem._id}">Last name:</label>
                    <input type="text" id="lastName_${cartItem._id}" name="lastName_${cartItem._id}" required>
                  </div>
                </div>
  
                <div class="form-group">
                  <div>
                    <label for="mobile_${cartItem._id}">Mobile:</label>
                    <input type="text" pattern="^[0-9]{10}" title="Mobile number invalid" id="mobile_${cartItem._id}" name="mobile_${cartItem._id}" inputmode="numeric" required>
                  </div>
  
                  <div>
                    <label for="email_${cartItem._id}">Email:</label>
                    <input type="email" id="email_${cartItem._id}" name="email_${cartItem._id}" required>
                  </div>
                </div>
  
                <div class="form-group full-width">
                  <label for="streetLandmark_${cartItem._id}">Street, Landmark:</label>
                  <input type="text" id="streetLandmark_${cartItem._id}" name="streetLandmark_${cartItem._id}" required>
                </div>
  
                <div class="form-group">
                  <div>
                    <label for="city_${cartItem._id}">City:</label>
                    <input type="text" id="city_${cartItem._id}" name="city_${cartItem._id}" required>
                  </div>
  
                  <div>
                    <label for="pincode_${cartItem._id}">Pincode:</label>
                    <input type="text" pattern="^[0-9]{6}" title="Pincode invalid" id="pincode_${cartItem._id}" inputmmode="numeric" name="pincode_${cartItem._id}" required>
                  </div>
                </div>
  
                <div class="form-group full-width">
                  <label for="state_${cartItem._id}">State:</label>
                  <select id="state_${cartItem._id}" name="state_${cartItem._id}" required>
                    <option value="Andhra Pradesh">Andhra Pradesh</option>
                    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                    <option value="Assam">Assam</option>
                    <option value="Bihar">Bihar</option>
                    <option value="Chhattisgarh">Chhattisgarh</option>
                    <option value="Goa">Goa</option>
                    <option value="Gujarat">Gujarat</option>
                    <option value="Haryana">Haryana</option>
                    <option value="Himachal Pradesh">Himachal Pradesh</option>
                    <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                    <option value="Jharkhand">Jharkhand</option>
                    <option value="Karnataka">Karnataka</option>
                    <option value="Kerala">Kerala</option>
                    <option value="Madhya Pradesh">Madhya Pradesh</option>
                    <option value="Maharashtra">Maharashtra</option>
                    <option value="Manipur">Manipur</option>
                    <option value="Meghalaya">Meghalaya</option>
                    <option value="Mizoram">Mizoram</option>
                    <option value="Nagaland">Nagaland</option>
                    <option value="Odisha">Odisha</option>
                    <option value="Punjab">Punjab</option>
                    <option value="Rajasthan">Rajasthan</option>
                    <option value="Sikkim">Sikkim</option>
                    <option value="Tamil Nadu">Tamil Nadu</option>
                    <option value="Telangana">Telangana</option>
                    <option value="Tripura">Tripura</option>
                    <option value="Uttarakhand">Uttarakhand</option>
                    <option value="Uttar Pradesh">Uttar Pradesh</option>
                    <option value="West Bengal">West Bengal</option>
                    <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                    <option value="Chandigarh">Chandigarh</option>
                    <option value="Dadra and Nagar Haveli">Dadra and Nagar Haveli</option>
                    <option value="Daman and Diu">Daman and Diu</option>
                    <option value="Delhi">Delhi</option>
                    <option value="Lakshadweep">Lakshadweep</option>
                    <option value="Puducherry">Puducherry</option>
                  </select>
                </div>
  
                <div class="form-group full-width">
                  <label for="country">Country:</label>
                  <input type="text" id="country_${cartItem._id}" name="country" value="India" disabled>
                </div>
              </form>
            </div>
          </div>
        </div>
        `;
      }).join("\n");
      cartItemsContainer.innerHTML = cartItemsDOMString;

      cartItemsContainer.addEventListener("click", async e => {
        const cartDelBtn = e.target.closest(".delete-item");
        if (cartDelBtn) {
          cartDelBtn.innerHTML = `<span class="loader" style="width:1rem;height:1rem;"></span>`;
          deleteCartItem(cartDelBtn.dataset.itemid); // change this to have id based delete btn
        }
      });

      document.querySelector(".pageend h2").textContent = 'Total: ₹' + fetchCartReponse.totalAmount;

    }

    const fetchCartData = async () => {
      try {
        const fetchCartRequest = await fetch("/getcart");
        fetchCartReponse = await fetchCartRequest.json();
        console.log(fetchCartReponse);
        if (fetchCartReponse.items.length === 0) {
          checkoutBtn.setAttribute("disabled", true);
          document.querySelector(".billing-address-form").style.display = "none";
          return cartItemsContainer.innerHTML = "<h5>Your cart seems empty.</h5>"
        }

        createCartItems();
      } catch (err) {
        console.log(err);
        cartItemsContainer.innerHTML = `
          <h5>Couldn't fetch cart items due to an error<br>${err}</h5>
        `;
      }
    }

    fetchCartData();

  </script>
</body>

</html>