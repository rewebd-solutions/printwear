<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Design Gallery</title>
    <link href='https://fonts.googleapis.com/css?family=Nunito' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
        integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta3/css/all.css">
    <link rel="stylesheet" href="/css/design.css">

</head>

<body>
    <!-- <% if (status != '') { %>
        <style>
            .status-box{
                padding: 1rem;
                border-left: 6px solid rgb(255, 81, 81);
                background-color: rgb(255, 159, 159);
                color: white;
                position: absolute;
                top: 2rem;
                left: 2rem;
                border-radius: 3px;
                z-index: 10;
                font-size: 0.8rem !important;
                transition: opacity 0.5s ease;
            }
            .dismiss{
                border: none;
                border-radius: 50%;
                padding: 0.6rem;
                cursor: pointer;
                top: 0.5rem;
                right: 0.5rem;
                display: inline-grid;
                place-items: center;
                transform: scale(0.6);
            }
            .delete-popup{
                opacity: 0;
            }
        </style>
        <div class="status-box">
            <h2><%=status%><button class="dismiss"><img src="/images/close-icon.webp" width="20" alt=""></button></h2>
        </div>
        <script>
            const removePopup = () =>  document.querySelector(".status-box").classList.add("delete-popup");
            const removePopupTimer = setInterval(() => {
                removePopup();
                document.querySelector(".status-box").remove();
            }, 2000);
            document.querySelector(".dismiss").addEventListener("click", removePopup);
        </script>
    <% } %>  -->
    <!-- Navbar starts here -->
    <div class="banner">
        <%- include('partials/side-logo.ejs') %>
            <%- include('partials/top.ejs') %>
    </div>
    <!-- Navbar ends here -->

    <main class="content">
        <div class="search" data-aos="fade-up">
            <input type="search" id="search" />
            <i class="fa-solid fa-magnifying-glass"></i>
        </div>
        <h1><span class="Title_1half">DESIGN</span>&nbsp;<span class="Title_2half">GALLERY</span></h1>
        <div class="content-main ">
            <div class="cards d-flex flex-column">
                <div class="image-upload" data-aos="fade-up">
                    <form action="/uploadimage" method="post" enctype="multipart/form-data">
                        <label for="file-input" class="file-input">
                            <i class="fa-solid fa-circle-plus fa-5x"></i>
                            <h5>Upload your designs</h5>
                            <p>Drop your designs here or click to browse</p>
                        </label>
                        <input id="file-input" type="file" onchange="form.submit()" name="image" accept="image/png" />
                    </form>
                </div>
            </div>
        </div>
        <div class="user-designs" data-aos="fade-up">
            <!-- <div class="design-image-wrapper">
                <button class="image-settings"><i class="fa fa-download"></i></button>
                <button class="image-settings image-settings-2"><i class="fa fa-trash"></i></button>
                <div
                    style="width: 250px; display: flex; justify-content: center; align-items: center; background: url('images/transp-checker.jpg')">
                    <img class="design-image" src="images/flaming-bunny.png" alt="" />
                </div>
                <div class="image-details">
                    <h5>imgname</h5>
                    <h6>1000 x 1000</h6>
                    <div class="design-image-meta">
                        <p>png</p>
                        <p>124.5 KB</p>
                    </div>
                </div>
            </div> -->
        </div>
    </main>

    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script>
        AOS.init();

        const userImageWrapper = document.querySelector(".user-designs");

        const fetchImageAndPopulate = async () => {
            try {
                const imageFetch = await fetch("/obtainimages");
                const imageData = await imageFetch.json();
                console.log(imageData);
                return imageData;
            } catch(err) {
                console.log(err);
                return err;
            }
        }

        const deleteImageHandler = async (imageid, imagename, imageidx) => {
            console.log(imageid, imagename);
            await fetch("/deleteimage", {
                method: "post",
                headers: {
                    'Content-Type': "application/json"
                },
                body: JSON.stringify({
                    imageId: imageid,
                    imageName: imagename,
                    imageIdX: imageidx
                })
            });
            location.reload();
        }


        fetchImageAndPopulate().then(data => {
            data.map(imageItem => {
                const image = new Image();
                image.src = imageItem.front.url;

                image.addEventListener("load", () => {
                    const imageProperties = {
                        width: image.width,
                        height: image.height,
                    };
    
                    const imageDOMString = `
                        <div class="design-image-wrapper">
                            <button class="image-settings"><a href="${imageItem.front.url}" target="_blank"><i class="fa fa-download"></i></a></button>
                            <button class="image-settings image-settings-2" data-imageid="${imageItem.userId}" data-imageidx="${imageItem._id}" data-imagename="${imageItem.front.name}"><i class="fa fa-trash"></i></button>
                            <div
                                style="width: 250px; display: flex; justify-content: center; align-items: center; background: url('images/transp-checker.jpg')">
                                <img class="design-image" src="${imageItem.front.url}" alt="" />
                            </div>
                            <div class="image-details">
                                <h5>${imageItem.front.name}</h5>
                                <h6>${imageProperties.width + 'x' + imageProperties.height}</h6>
                                <div class="design-image-meta">
                                    <p>${imageItem.front.format}</p>
                                    <p>${imageItem.front.size} KB</p>
                                </div>
                            </div>
                        </div>
                    `;
                    userImageWrapper.innerHTML += imageDOMString;

                    //const deleteBtn = document.querySelector(`button[data-imageid="${imageItem._id}"]`);
                    //console.log(deleteBtn);
                    //deleteBtn.addEventListener("click", () => deleteImageHandler(imageItem._id));
                })
            });
            
        }).catch((err) => {
            console.log(err);
            const imageDOMString = `An error occured while fetching the data, please try again.`;
            userImageWrapper.innerHTML = imageDOMString;
        });

        userImageWrapper.addEventListener("click", (e) => {
            const deleteBtn = e.target.closest(".image-settings-2");
            if(deleteBtn) {
                deleteImageHandler(deleteBtn.dataset.imageid, deleteBtn.dataset.imagename, deleteBtn.dataset.imageidx);
            }
        });
    </script>
</body>

</html>